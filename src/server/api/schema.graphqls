# A user
type User {
  # Id of the user
  id: String!
  # Display name of the user
  login: String!
  # Avatar url
  avatarUrl: String!
}

# A component
type Component {
  # Id of the component
  id: String!
  # Title of the component
  title: String!
  # Description og the component
  description: String!
  # Component code of the single file component
  component: String!
  # The author who submitted the component
  author: User!
}

# Type for creating a new component
input ComponentInput {
  title: String!
  description: String!
  component: String!
}

# Type for updating an existing component
input ComponentUpdateInput {
  description: String
  component: String
}

# All things you can query for
type Query {
  # The current user
  currentUser: User
  # All available components
  components: [Component]!
  # One component
  component(id: String!): Component
}

type Mutation {
  # Create a component
  createComponent(component: ComponentInput!): Component!
  # Deletes a component and returns the id of the deleted component
  deleteComponent(componentId: String!): String
  # Updates a component
  updateComponent(
    componentId: String!,
    data: ComponentUpdateInput!
  ): Component!
}

schema {
  query: Query
  mutation: Mutation
}
